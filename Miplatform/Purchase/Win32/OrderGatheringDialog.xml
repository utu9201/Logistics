<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="776" Id="OrderGatheringDialog" Left="8" OnLoadCompleted="OrderGatheringDialog_OnLoadCompleted" PidAttrib="7" Title="발주취합" Top="8" Ver="1.0" Width="1330" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_orderGathering">
				<Contents>
					<colinfo id="ITEM_CODE" size="256" summ="default" type="STRING"/>
					<colinfo id="ITEM_NAME" size="256" summ="default" type="STRING"/>
					<colinfo id="UNIT_OF_ORDER" size="256" summ="default" type="STRING"/>
					<colinfo id="DELIVERY_SCHEDULE_DATE" size="256" summ="default" type="STRING"/>
					<colinfo id="AMOUNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ORDER_AMOUNT" size="256" summ="default" type="STRING"/>
					<colinfo id="ORDER_DETAIL_STATUS" size="256" summ="default" type="STRING"/>
					<colinfo id="ORDER_GATHERING_NO" size="256" summ="default" type="STRING"/>
					<colinfo id="ORDER_NO" size="256" summ="default" type="STRING"/>
					<colinfo id="NEED_AMOUNT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Grid AutoFit="TRUE" BindDataset="gds_mrpGathering" BkColor2="default" BoldHead="true" Bottom="356" Enable="true" EndLineColor="default" Font="한컴산뜻돋움,11" HeadHeight="30" Height="340" Id="grd_mrpGathering" InputPanel="FALSE" Left="8" LineColor="default" MinWidth="100" Right="758" RowHeight="25" TabOrder="1" TabStop="true" Top="16" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="750">
			<contents>
				<format id="Default">
					<columns>
						<col width="109"/>
						<col width="82"/>
						<col width="52"/>
						<col width="76"/>
						<col width="80"/>
					</columns>
					<head>
						<cell col="0" display="text" text="소요량취합번호"/>
						<cell col="1" display="text" text="코드"/>
						<cell col="2" display="text" text="수량"/>
						<cell col="3" display="text" text="입고예정일"/>
						<cell col="4" display="text"/>
					</head>
					<body>
						<cell col="0" colid="MRP_GATHERING_NO" display="text"/>
						<cell col="1" colid="ITEM_CODE" display="text"/>
						<cell col="2" colid="NECESSARY_AMOUNT" display="text"/>
						<cell col="3" colid="DUE_DATE" display="text"/>
						<cell col="4" display="text" expr="getRowtype(currow)"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid AutoFit="TRUE" BindDataset="ds_orderGathering" BkColor2="default" BoldHead="true" Bottom="764" Enable="true" EndLineColor="default" Font="한컴산뜻돋움,11" HeadHeight="30" Height="340" Id="grd_orderGathering" InputPanel="FALSE" Left="8" LineColor="default" MinWidth="100" Right="758" RowHeight="25" TabOrder="2" TabStop="true" Top="424" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="750">
			<contents>
				<format id="Default">
					<columns>
						<col width="68"/>
						<col width="92"/>
						<col width="42"/>
						<col width="44"/>
						<col width="80"/>
						<col width="80"/>
					</columns>
					<head>
						<cell col="0" display="text" text="품번"/>
						<cell col="1" display="text" text="품명"/>
						<cell col="2" display="text" text="단위"/>
						<cell col="3" display="text" text="소요량"/>
						<cell col="4" display="text" text="입고예정일"/>
						<cell col="5" display="text" text="필요량"/>
					</head>
					<body>
						<cell col="0" colid="ITEM_CODE" display="text"/>
						<cell col="1" colid="ITEM_CODE" combocol="ITEM_CODE" combodataset="gds_item" combotext="ITEM_NAME" display="combo" expr="Ltrim(ITEM_NAME)"/>
						<cell col="2" colid="UNIT_OF_ORDER" display="text"/>
						<cell col="3" colid="ORDER_AMOUNT" display="text"/>
						<cell col="4" colid="DELIVERY_SCHEDULE_DATE" display="text"/>
						<cell col="5" colid="need_amount" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Button BKColor="goldenrod" BorderColor="goldenrod" Color="WINDOW" Font="한컴산뜻돋움,11,Bold" Height="44" Id="btn_find_orderList" Left="8" OnClick="btn_addOrderGathering_OnClick" TabOrder="3" Text="발주취합" Top="376" Width="100"></Button>
		<Button BKColor="goldenrod" BorderColor="goldenrod" Color="WINDOW" Font="한컴산뜻돋움,11,Bold" Height="44" Id="btn_cancel" Left="584" OnClick="btn_cancel_OnClick" TabOrder="4" Text="취소" Top="376" Width="84"></Button>
		<Button BKColor="goldenrod" BorderColor="goldenrod" Color="WINDOW" Font="한컴산뜻돋움,11,Bold" Height="44" Id="btn_close" Left="672" OnClick="btn_close_OnClick" TabOrder="5" Text="닫기" Top="376" Width="84"></Button>
		<Grid AutoFit="TRUE" BindDataset="gds_stock" BkColor2="default" BoldHead="true" Bottom="760" Enable="true" EndLineColor="default" Font="한컴산뜻돋움,11" HeadHeight="30" Height="696" Id="Grid0" InputPanel="FALSE" Left="768" LineColor="default" MinWidth="100" Right="1312" RowHeight="25" TabOrder="6" TabStop="true" Top="64" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="544">
			<contents>
				<format id="Default">
					<columns>
						<col width="102"/>
						<col width="57"/>
						<col width="80"/>
					</columns>
					<head>
						<cell col="0" display="text" text="품번"/>
						<cell col="1" display="text" text="단위"/>
						<cell col="2" display="text" text="가용재고"/>
					</head>
					<body>
						<cell col="0" colid="ITEM_CODE" display="text"/>
						<cell col="1" colid="UNIT_OF_STOCK" display="text"/>
						<cell col="2" colid="STOCK_AMOUNT" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Static Align="Center" BKColor="goldenrod" Border="SunkenEdge" Font="한컴산뜻돋움,11,Bold" Height="44" Id="Static6" Left="768" TabOrder="7" Text="재고현황" Top="16" VAlign="Middle" Width="112"></Static>
		<Button BKColor="goldenrod" BorderColor="goldenrod" Color="WINDOW" Font="한컴산뜻돋움,11,Bold" Height="44" Id="btn_save" Left="496" OnClick="btn_save_OnClick" TabOrder="8" Text="저장" Top="376" Width="84"></Button>
	</Form>
	<Script><![CDATA[function OrderGatheringDialog_OnLoadCompleted(obj) {

    http.Sync = true;
    grd_mrpGathering.Redraw = false;
    grd_orderGathering.Redraw = false;

    transaction("findMrpGatheringList",
        "svcProduction::mrp.do?method=findMrpGatheringList",
        "",
        "gds_mrpGathering=gds_mrpGathering",
        "",
        "callback");

    transaction("findStockList",
        "svcPurchase::stock.do?method=findStockList",
        "",
        "gds_stock=gds_stock",
        "",
        "callback");
    gds_mrpGathering.Filter("ORDER_OR_PRODUCTION_STATUS='구매' && ON_GOING_PROCESS_STATUS=null ");
    //	gds_orderGathering.Filter("ORDER_AMOUNT > 0 ");

    grd_mrpGathering.Redraw = true;
    grd_orderGathering.Redraw = true;
    http.Sync = false;

}

function btn_addOrderGathering_OnClick(obj) {
    if (gds_mrpGathering.count >= 0) {
        for (var i = 0; i <= gds_mrpGathering.count; i++) {
            gds_mrpGathering.SetColumn(i, "ON_GOING_PROCESS_STATUS", 'O');
        }
    }
    
   var itemArray = [];	// 품목을 하나씩 넣어주는 곳
    var itemAmountArray = [];	// 그 품목의 총 합을 넣어줄 배열
    var itemDueDateArray = []; // 품목의 납기일 배열
    if (confirm("발주취합을 실행하시겠습니까?")) {
        http.Sync = true;
        grd_mrpGathering.Redraw = false;
        grd_orderGathering.Redraw = false;

        // transaction("findOrderGatheringList",
        // "svcPurchase::order.do?method=findOrderGatheringList",
        // "",
        // "gds_orderGathering=gds_orderGathering",
        // "",
        // "callback");
       //order_gathering에 넣기위한 for문 시작
        
        var rowCount = gds_mrpGathering.rowcount; //취합전 품목 총 갯수
        var verification = true; // item 배열에 같은 값이 있는지를 판별 해줌
        
        var num = 0;	//item 배열에 넣기위한 변수
       
        for (var i = 0; i < rowCount; i++) {
            var itemCode = gds_mrpGathering.GetColumn(i, "item_code"); //넣어줄 코드 빼오는 곳
            var itemAmount = parseInt(gds_mrpGathering.GetColumn(i, "necessary_amount")); // 수량
            var itemDueDate = parseInt(replace(gds_mrpGathering.GetColumn(i, "due_date"),"/","")); // 납기일
            verification = true;

            for (var j = 0; j <= num; j++) {
                if (itemArray[j] = itemCode) { //배열안에 같은 물품이 있을 시에 돌아가는 if 절
                    verification = false;
                    //수량은 if문이 true일시에 같은 물품이라는 것이므로 더해줌
                    itemAmountArray[j] = itemAmountArray[j] + itemAmount;
                    if(itemDueDateArray[j] > itemDueDate){ //입고예정일이 더 작은날이 세팅되게 설정
						itemDueDateArray[j] = itemDueDate;
                    }
                }
            }

            if (verification) { //배열에 같은 물품이 없을시에 돌아가는 if절
                itemArray[num] = itemCode;
                itemAmountArray[num] = itemAmount;
                itemDueDateArray[num] = itemDueDate;
                num++;
            }
        }
    }

	for(i=0; i<itemArray.length; i++){
		var row = ds_orderGathering.AddRow();
		
		gds_stock.Filter("item_code = '" + itemArray[i] + "'");
		var stockAmount = parseInt(gds_stock.GetColumn(0, "stock_amount"));
		
		
		var needItemAmount = ceil((itemAmountArray[i] - stockAmount)*1.01);
		if(needItemAmount < 0 ){
		needItemAmount = 0;
		}
		ds_orderGathering.SetColumn(row, "item_code", itemArray[i]);
		ds_orderGathering.SetColumn(row, "order_amount", itemAmountArray[i]);
		ds_orderGathering.SetColumn(row, "unit_of_order", "EA"); //가라 인정합니다
		ds_orderGathering.setColumn(row, "need_amount", needItemAmount);//58기가 정한 회사규정
													//(필요 수량 - 현재 재고) * 10%  => 발주수량
		ds_orderGathering.SetColumn(row, "delivery_schedule_date", itemDueDateArray[i]);
		gds_stock.UnFilter();
	}



    gds_mrpGathering.Filter("ORDER_OR_PRODUCTION_STATUS='구매' && ON_GOING_PROCESS_STATUS=null ");

    grd_mrpGathering.Redraw = true;
    grd_orderGathering.Redraw = true;
    http.Sync = false;
}

}

function callback(trid, ErrorCode, ErrorMsg) {

    if (trid == "findOrderGatheringList") {
        if (ErrorCode >= 0) {
            alert("완료되었습니다");
        }
    } else if (trid == "batchMrpGathering") {
        if (ErrorCode >= 0) {
            alert("저장 되었습니다.");
            close();
        }
    }
}


function btn_cancel_OnClick(obj) {

    gds_mrpGathering.Filter("ORDER_OR_PRODUCTION_STATUS='구매'");
    if (gds_mrpGathering.count >= 0) {
        for (var i = 0; i <= gds_mrpGathering.count; i++) {
            gds_mrpGathering.SetColumn(i, "ON_GOING_PROCESS_STATUS", null);
        }
    }

    // http.Sync = true;
    // transaction("findOrderGatheringList",
    // "svcPurchase::order.do?method=findOrderGatheringList",
    // "",
    // "gds_orderGathering=gds_orderGathering",
    // "",
    // "callback");

    // http.Sync = false;

    ds_orderGathering.DeleteAll();
    gds_mrpGathering.Filter("ORDER_OR_PRODUCTION_STATUS='구매' && ON_GOING_PROCESS_STATUS=null ");

}

function btn_close_OnClick(obj) {
    Close();
}

function btn_save_OnClick(obj) {
	// trace(gds_orderGathering.GetRowCount());
	
	 //merge는 copy랑 같은데 status를 그대로 가지고 간다(insert - > insert)
	 //copy는 insert를 거지같게도 normal로 바꾼다 append도 마찬가지
	 
	 gds_orderGathering.Merge(ds_orderGathering);
	// AppendData("gds_orderGathering", "ds_orderGathering");
	
	
	 transaction("registOrderGathering",
        "svcPurchase::order.do?method=registOrderGathering",
        "gds_orderGathering=gds_orderGathering:U",
        "",
        "",
        "callback");
	ds_orderGathering.DeleteAll();

    http.Sync = true;
    transaction("batchMrpGathering",
        "svcProduction::mrp.do?method=batchMrpGathering",
        "gds_mrpGathering=gds_mrpGathering:U",
        "",
        "",
        "callback");
        
        gds_orderGathering.Filter("ORDER_DETAIL_STATUS = NULL");
    http.Sync = false;
}
]]></Script>
</Window>